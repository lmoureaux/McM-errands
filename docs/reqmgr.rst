.. SPDX-FileCopyrightText: Louis Moureaux <louis.moureaux@cern.ch>
.. SPDX-License-Identifier: AGPL-3.0-or-later

The Request Manager
===================

The Request Manager, or `ReqMgr2 <https://cmsweb.cern.ch/reqmgr2/index>`_,
manages CMS computing jobs and distributes them across the Grid. When producing
new datasets, McM submits requests to the Request Manager like one would do to
any batch system, except they run on the Grid and are tightly integrated with
CMSSW and the CMS data storage. This page documents the structure of the tasks
submitted by McM.

Every Monte-Carlo production in CMS starts from a ``cmsDriver.py`` command line.
McM is, at its core, a tool to prepare the list of ``cmsDriver.py`` commands
needed to produce a dataset and submit them to the Request Manager for
production. Separate commands are typically used every processing step leading
to a file ready for analysis: event generation, detector simulation, trigger
system emulation, reconstruction and formatting as NANOAOD. Each of them gets
submitted as a separate task to the Request Manager.


The Configuration Cache
-----------------------

The Request Manager cannot run ``cmsDriver.py`` commands directly. Instead, one
needs to upload a CMSSW configuration file to a separate database called the
Configuration Cache. The Configuration Cache is a CouchDB database storing
simple metadata about a configuration file in its documents and the files
themselves as attachments. Entries in the Configuration Cache are referred to
using the ID of the corresponding CouchDB documents.

The configuration files are obtained by running ``cmsDriver.py`` with additional
arguments to instruct it to store the configuration. Unfortunately, some of the
metadata needed by the Configuration Cache requires a second pass through the
configuration to inspect the output modules generated by ``cmsDriver.py``. This
is done using the `wmupload script`_. These two steps have to be run in a CMSSW
environment matching the one used to execute the configuration.

.. _wmupload script: https://github.com/cms-PdmV/wmcontrol/blob/master/wmupload.py
